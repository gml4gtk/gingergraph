/*
 *   This file was automatically generated by version 1.7 of cextract.
 *   Manual editing not recommended.
 */

#ifndef __CEXTRACT__
#ifdef __STDC__

extern matrix * matrixcreate ( graph * g, int r, int c );
extern int matrixsizeof ( void );
extern void matrixdestroy ( graph * g, matrix * m );
extern matrix * matrixcopy ( graph * g, matrix * m );
extern int matrixat ( graph * g, matrix * m, int r, int c );
extern void matrixatput ( graph * g, matrix * m, int r, int c, int element );
extern void matrixatrowputnode ( graph * g, matrix * m, int r, node * n1 );
extern void matrixatcolumnputnode ( graph * g, matrix * m, int c, node * n1 );
extern node * matrixnodeatrow ( graph * g, matrix * m, int r );
extern node * matrixnodeatcolumn ( graph * g, matrix * m, int c );
extern void matrixprioritylayoutdown ( graph * g, matrix * m );
extern void matrixprioritylayoutup ( graph * g, matrix * m );
extern void matrixarraydownupiterate ( graph * g, matrix * m[], int size, int max_iterations );
extern int matrixarraycrossings ( graph * g, matrix * array[], int size );
extern int matrixcrossings ( graph * g, matrix * m );
extern int matrixcrossingsinrows ( graph * g, matrix * m, int j, int k );
extern int matrixnodeupperbarycenter ( graph * g, matrix * m, node * n, int c );
extern int matrixnodelowerbarycenter ( graph * g, matrix * m, node * n, int r );
extern int trymovenodeincolumn ( graph * g, matrix * m, int column, int old_position, int delta_position, int priority );
extern int trymovenodeinrow ( graph * g, matrix * m, int row, int old_position, int delta_position, int priority );
extern void movenodeincolumn ( graph * g, matrix * m, int c, int delta_position );
extern void movenodeinrow ( graph * g, matrix * m, int r, int delta_position );
extern void matrixarraydownup ( graph * g, matrix * m[], int size );
extern void matrixarraydown ( graph * g, matrix * m[], int size );
extern void matrixarrayup_alloc ( int nlevel );
extern void matrixarrayup ( graph * g, matrix * m[], int size );
extern void matrixcomputecolumnbarycenters ( graph * g, matrix * m );
extern void matrixcomputerowbarycenters ( graph * g, matrix * m );
extern float matrixrowbarycenter ( graph * g, matrix * m, int r );
extern void matrixatrowputbarycenter ( graph * g, matrix * m, int r, float b );
extern void matrixatcolumnputbarycenter ( graph * g, matrix * m, int c, float b );
extern float matrixcolumnbarycenter ( graph * g, matrix * m, int c );
extern void swapelements ( graph * g, redirection_element array[], int i, int j );
extern void sortredirectionvectoronbarycenter ( graph * g, redirection_element array[], int array_size );
extern void sortredirectionvectoronbarycenterfollow ( graph * g, redirection_element array[], redirection_element follow_array[], int array_size );
extern void matrixsortrowsonbarycenter ( graph * g, matrix * m );
extern void matrixsortcolumnsonbarycenter ( graph * g, matrix * m );
extern void matrixsortrowsonbarycenterfollow ( graph * g, matrix * m, matrix * follow );
extern void matrixsortcolumnsonbarycenterfollow ( graph * g, matrix * m, matrix * follow );
extern void matrixprintlog ( FILE * logstream, matrix * m );

#else /* __STDC__ */

extern matrix * matrixcreate ( graph * g, int r, int c );
extern int matrixsizeof ( void );
extern void matrixdestroy ( graph * g, matrix * m );
extern matrix * matrixcopy ( graph * g, matrix * m );
extern int matrixat ( graph * g, matrix * m, int r, int c );
extern void matrixatput ( graph * g, matrix * m, int r, int c, int element );
extern void matrixatrowputnode ( graph * g, matrix * m, int r, node * n1 );
extern void matrixatcolumnputnode ( graph * g, matrix * m, int c, node * n1 );
extern node * matrixnodeatrow ( graph * g, matrix * m, int r );
extern node * matrixnodeatcolumn ( graph * g, matrix * m, int c );
extern void matrixprioritylayoutdown ( graph * g, matrix * m );
extern void matrixprioritylayoutup ( graph * g, matrix * m );
extern void matrixarraydownupiterate ( graph * g, matrix * m[], int size, int max_iterations );
extern int matrixarraycrossings ( graph * g, matrix * array[], int size );
extern int matrixcrossings ( graph * g, matrix * m );
extern int matrixcrossingsinrows ( graph * g, matrix * m, int j, int k );
extern int matrixnodeupperbarycenter ( graph * g, matrix * m, node * n, int c );
extern int matrixnodelowerbarycenter ( graph * g, matrix * m, node * n, int r );
extern int trymovenodeincolumn ( graph * g, matrix * m, int column, int old_position, int delta_position, int priority );
extern int trymovenodeinrow ( graph * g, matrix * m, int row, int old_position, int delta_position, int priority );
extern void movenodeincolumn ( graph * g, matrix * m, int c, int delta_position );
extern void movenodeinrow ( graph * g, matrix * m, int r, int delta_position );
extern void matrixarraydownup ( graph * g, matrix * m[], int size );
extern void matrixarraydown ( graph * g, matrix * m[], int size );
extern void matrixarrayup_alloc ( int nlevel );
extern void matrixarrayup ( graph * g, matrix * m[], int size );
extern void matrixcomputecolumnbarycenters ( graph * g, matrix * m );
extern void matrixcomputerowbarycenters ( graph * g, matrix * m );
extern float matrixrowbarycenter ( graph * g, matrix * m, int r );
extern void matrixatrowputbarycenter ( graph * g, matrix * m, int r, float b );
extern void matrixatcolumnputbarycenter ( graph * g, matrix * m, int c, float b );
extern float matrixcolumnbarycenter ( graph * g, matrix * m, int c );
extern void swapelements ( graph * g, redirection_element array[], int i, int j );
extern void sortredirectionvectoronbarycenter ( graph * g, redirection_element array[], int array_size );
extern void sortredirectionvectoronbarycenterfollow ( graph * g, redirection_element array[], redirection_element follow_array[], int array_size );
extern void matrixsortrowsonbarycenter ( graph * g, matrix * m );
extern void matrixsortcolumnsonbarycenter ( graph * g, matrix * m );
extern void matrixsortrowsonbarycenterfollow ( graph * g, matrix * m, matrix * follow );
extern void matrixsortcolumnsonbarycenterfollow ( graph * g, matrix * m, matrix * follow );
extern void matrixprintlog ( FILE * logstream, matrix * m );

#endif /* __STDC__ */
#endif /* __CEXTRACT__ */
